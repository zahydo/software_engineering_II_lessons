/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package co.edu.unicauca.openmarket.presentation;

import co.edu.unicauca.openmarket.domain.Category;
import co.edu.unicauca.openmarket.domain.service.CategoryService;
import co.edu.unicauca.openmarket.infra.Messages;
import javax.swing.JOptionPane;

/**
 *
 * @author william
 */
public class GUICategories extends javax.swing.JFrame {
    private CategoryService categoryService;
    private boolean addOption;

    /** Creates new form GUICategories */
    public GUICategories(CategoryService categoryService) {
        initComponents();
        this.categoryService = categoryService;
        stateInitial();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSouth = new javax.swing.JPanel();
        btnNuevoC = new javax.swing.JButton();
        btnEditarC = new javax.swing.JButton();
        btnGrabarC = new javax.swing.JButton();
        btnCancelarC = new javax.swing.JButton();
        btnEliminarC = new javax.swing.JButton();
        btnBuscarC = new javax.swing.JButton();
        btnCerrarC = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();
        lbIdC = new javax.swing.JLabel();
        txtIdC = new javax.swing.JTextField();
        lbNombreC = new javax.swing.JLabel();
        txtNombreC = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Categorías");
        setMinimumSize(new java.awt.Dimension(584, 114));
        setPreferredSize(new java.awt.Dimension(584, 330));
        setResizable(false);

        pnlSouth.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlSouth.setMinimumSize(new java.awt.Dimension(584, 38));
        pnlSouth.setName(""); // NOI18N
        pnlSouth.setPreferredSize(new java.awt.Dimension(584, 38));

        btnNuevoC.setLabel("Nuevo");
        btnNuevoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoCActionPerformed(evt);
            }
        });
        pnlSouth.add(btnNuevoC);

        btnEditarC.setText("Editar");
        btnEditarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCActionPerformed(evt);
            }
        });
        pnlSouth.add(btnEditarC);

        btnGrabarC.setText("Grabar");
        btnGrabarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarCActionPerformed(evt);
            }
        });
        pnlSouth.add(btnGrabarC);

        btnCancelarC.setText("Cancelar");
        btnCancelarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCancelarC);

        btnEliminarC.setText("Eliminar");
        btnEliminarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCActionPerformed(evt);
            }
        });
        pnlSouth.add(btnEliminarC);

        btnBuscarC.setText("Buscar");
        btnBuscarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCActionPerformed(evt);
            }
        });
        pnlSouth.add(btnBuscarC);

        btnCerrarC.setText("Cerrar");
        btnCerrarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarCActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCerrarC);

        getContentPane().add(pnlSouth, java.awt.BorderLayout.SOUTH);

        pnlCenter.setMinimumSize(new java.awt.Dimension(168, 76));
        pnlCenter.setLayout(new java.awt.GridLayout(3, 2));

        lbIdC.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbIdC.setText("*Id:");
        pnlCenter.add(lbIdC);

        txtIdC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdCFocusLost(evt);
            }
        });
        pnlCenter.add(txtIdC);

        lbNombreC.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbNombreC.setText("*Nombre:");
        pnlCenter.add(lbNombreC);
        pnlCenter.add(txtNombreC);

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoCActionPerformed
        stateNew();
        txtNombreC.requestFocus();
        addOption = true;
    }//GEN-LAST:event_btnNuevoCActionPerformed

    private void btnCancelarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCActionPerformed
        stateInitial();
        cleanControls();
    }//GEN-LAST:event_btnCancelarCActionPerformed

    private void btnCerrarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarCActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarCActionPerformed

    private void btnGrabarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarCActionPerformed
        if (txtNombreC.getText().trim().equals("")) {
            Messages.showMessageDialog("Debe ingresar el nombre del producto", "Atención");
            txtNombreC.requestFocus();
            return;
        }
        if (addOption) {
            //Agregar
            addCategory();

        } else {
            //Editar
            editCategory();
        }
    }//GEN-LAST:event_btnGrabarCActionPerformed

    private void btnEditarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCActionPerformed
        addOption = false;
        stateEdit();
        txtIdC.requestFocus();
    }//GEN-LAST:event_btnEditarCActionPerformed

    private void txtIdCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdCFocusLost
        if (txtIdC.getText().trim().equals("")) {
            return;
        }
        Long categoryId = Long.parseLong(txtIdC.getText());
        Category category = categoryService.findCategoryById(categoryId);
        if (category == null) {
            Messages.showMessageDialog("El identificador del producto no existe", "Error");
            txtIdC.setText("");
            txtIdC.requestFocus();
        } else {
            txtNombreC.setText(category.getName());
        }
    }//GEN-LAST:event_txtIdCFocusLost

    private void btnEliminarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCActionPerformed
        String id = txtIdC.getText().trim();
        if (id.equals("")) {
            Messages.showMessageDialog("Debe buscar el producto a eliminar", "Atención");
            txtIdC.requestFocus();
            return;
        }
        Long categoryId = Long.parseLong(id);                
        if (Messages.showConfirmDialog("Está seguro que desea eliminar este producto?", "Confirmación") == JOptionPane.YES_NO_OPTION) {
            if (categoryService.deleteCategory(categoryId)) {
                Messages.showMessageDialog("Producto eliminado con éxito", "Atención");
                stateInitial();
                cleanControls();
            }
        }
    }//GEN-LAST:event_btnEliminarCActionPerformed

    private void btnBuscarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCActionPerformed
        GUICategoriesFind instance = new GUICategoriesFind(this, true, categoryService);
        instance.setVisible(true);
    }//GEN-LAST:event_btnBuscarCActionPerformed

    private void stateEdit() {
        btnNuevoC.setVisible(false);
        btnEditarC.setVisible(false);
        btnEliminarC.setVisible(true);
        btnCancelarC.setVisible(true);
        btnCerrarC.setVisible(false);
        btnGrabarC.setVisible(true);
        btnBuscarC.setVisible(false);
        txtIdC.setEnabled(true);
        txtNombreC.setEnabled(true);
    }
    
    private void stateInitial() {
        btnNuevoC.setVisible(true);
        btnEditarC.setVisible(true);
        btnEliminarC.setVisible(false);
        btnCancelarC.setVisible(false);
        btnCerrarC.setVisible(true);
        btnGrabarC.setVisible(false);
        btnBuscarC.setVisible(true);
        txtIdC.setEnabled(false);
        txtNombreC.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarC;
    private javax.swing.JButton btnCancelarC;
    private javax.swing.JButton btnCerrarC;
    private javax.swing.JButton btnEditarC;
    private javax.swing.JButton btnEliminarC;
    private javax.swing.JButton btnGrabarC;
    private javax.swing.JButton btnNuevoC;
    private javax.swing.JLabel lbIdC;
    private javax.swing.JLabel lbNombreC;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlSouth;
    private javax.swing.JTextField txtIdC;
    private javax.swing.JTextField txtNombreC;
    // End of variables declaration//GEN-END:variables

    private void stateNew(){
        btnNuevoC.setVisible(false);
        btnEditarC.setVisible(false);
        btnEliminarC.setVisible(false);
        btnCancelarC.setVisible(true);
        btnCerrarC.setVisible(false);
        btnGrabarC.setVisible(true);
        btnBuscarC.setVisible(false);
        txtIdC.setEnabled(false);
        txtNombreC.setEnabled(true);
    }
    
    private void cleanControls() {
        txtIdC.setText("");
        txtNombreC.setText("");
    }
    
    private void addCategory() {
        String name = txtNombreC.getText().trim();

        if (categoryService.saveCategory(name)) {
            Messages.showMessageDialog("Se grabó con éxito", "Atención");
            cleanControls();
            stateInitial();
        } else {
            Messages.showMessageDialog("Error al grabar, lo siento mucho", "Atención");
        }
    }

    private void editCategory() {
        String id = txtIdC.getText().trim();
        if (id.equals("")) {
            Messages.showMessageDialog("Debe buscar el producto a editar", "Atención");
            txtIdC.requestFocus();
            return;
        }
        Long categoryId = Long.parseLong(id);
        Category category = new Category();
        category.setName(txtNombreC.getText().trim());

        if (categoryService.editCategory(categoryId, category)) {
            Messages.showMessageDialog("Se editó con éxito", "Atención");
            cleanControls();
            stateInitial();
        } else {
            Messages.showMessageDialog("Error al editar, lo siento mucho", "Atención");
        }
    }
}
